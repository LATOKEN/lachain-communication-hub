jobs:
  include:
    - stage: Build
      os: linux
      workspaces:
        create:
          name: linux-binaries
      language: go
      go: 1.17.3
      script:
        - go get -d -v ./...
        - go build -o libhub_${TRAVIS_OS_NAME}.so -buildmode=c-shared embedded_hub.go

    - stage: Build
      os: osx
      workspaces:
        create:
          name: osx-binaries
      language: go
      go: 1.17.3
      script:
        - go get -d -v ./...
        - go build -o libhub_${TRAVIS_OS_NAME}.dylib -buildmode=c-shared embedded_hub.go
    
    - stage: Build
      os: 
      workspaces:
        create:
          name: windows-binaries
      language: go
      go: 1.17.3
      script:
        - go get -d -v ./...
        - go build -o libhub_${TRAVIS_OS_NAME}.dll -buildmode=c-shared embedded_hub.go

    - stage: Deploy  
      language: minimal 
      deploy:
        provider: releases
        api_key: "$GITHUB_TOKEN"
        file_glob: true
        file: libhub_${TRAVIS_OS_NAME}.*
        skip_cleanup: true
        on:
          tags: true
    
    - language: csharp
      dotnet: 5.0
      mono: none
      dist: focal
      addons:
        apt:
          packages:
            - dotnet-sdk-3.1
            - nuget
      env:
        global:
          - DOTNET_SKIP_FIRST_TIME_EXPERIENCE=true
          - DOTNET_CLI_TELEMETRY_OPTOUT=1      
      install:
        - dotnet restore Lachain.CommunicationHub.Net
        - dotnet build -c Release Lachain.CommunicationHub.Net
      script:
        - nuget pack Lachain.CommunicationHub.Native.nuspec
        - cd Lachain.CommunicationHub.Net/
        - dotnet build Lachain.CommunicationHub.Net.sln
        - dotnet pack Lachain.CommunicationHub.Net.csproj
      deploy:
        provider: releases
        api_key: "$GITHUB_TOKEN"
        file_glob: true
        file: bin/*
        skip_cleanup: true
        draft: true
        on:
          tags: true




